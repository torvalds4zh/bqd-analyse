<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- Connection Info -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="${db.mysql.url}"/>
        <property name="username" value="${db.mysql.username}"/>
        <property name="password" value="${db.mysql.password}"/>

        <!-- Connection Pooling DBCP -->
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="100"/>
        <property name="maxIdle" value="30"/>
        <property name="maxWait" value="100"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>

        <!-- Test connection -->
        <property name="timeBetweenEvictionRunsMillis" value="3600"/>
        <property name="testWhileIdle" value="true"/>
        <!--<property name="validationQuery" value="select 1 from t_account" />-->
    </bean>

    <!--<mongo:db-factory id="mongoDbFactory"-->
                      <!--host="${db.mongo.url}"-->
                      <!--port="${db.mongo.port}"-->
                      <!--dbname="${db.mongo.instance}"/>-->

    <!--<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">-->
        <!--<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>-->
    <!--</bean>-->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 增加DB事务管理, 方法上面增加注解,需要指定事务名称(由于多db事务),spring mvc 需要在控制层spring配置过滤掉service -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

    <bean id="objectMapper" class="com.haizhi.bqd.common.ObjectMapperFactory" factory-method="get"/>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
    </bean>

    <bean id="jedis" class="redis.clients.jedis.JedisPool">
        <constructor-arg ref="poolConfig"/>
        <constructor-arg type="java.lang.String" value="${redis.host}"/>
        <constructor-arg value="${redis.port}"/>
        <constructor-arg value="${redis.timeout}"/>
    </bean>

    <bean id="userRepo" class="com.haizhi.bqd.service.repo.UserRepo">
        <property name="template" ref="jdbcTemplate"/>
    </bean>

    <bean id="userRoleRepo" class="com.haizhi.bqd.service.repo.UserRoleRepo">
        <property name="template" ref="jdbcTemplate"/>
    </bean>

    <bean id="redisRepo" class="com.haizhi.bqd.service.repo.RedisRepo">
        <property name="jedisPool" ref="jedis"/>
        <property name="objectMapper" ref="objectMapper"/>
    </bean>

    <bean id="esClient" class="com.haizhi.bqd.service.factory.ESClientFactory" factory-method="generate">
        <constructor-arg value="${es.cluster_name}"/>
        <constructor-arg value="${es.hosts}"/>
    </bean>

</beans>
